{"version":3,"sources":["range.es5.js"],"names":["name","definition","define","module","exports","theModule","global","window","old","noConflict","Range","min","max","arguments","length","Error","switchValue","stringCallback","numberCallback","value","_switch","String","fromCharCode","v","charCodeAt","index","size","undefined","get","Math","floor","random","other","array","tmp","_next","push","callback"],"mappings":"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","file":"range.es5.js","sourcesContent":["(function(name, definition) {\n    if (typeof define === 'function') { // AMD\n        define(definition);\n    } else if (typeof module !== 'undefined' && module.exports) { // Node\n        module.exports = definition();\n    } else { // Browser\n        var theModule = definition(),\n            global = this || window,\n            old = global[name];\n        theModule.noConflict = function() {\n            global[name] = old;\n            return theModule;\n        };\n        global[name] = theModule;\n    }\n})('Range', function() {\n    class Range {\n\n        constructor(min, max) {\n            if (arguments.length !== 2)\n                throw new Error('Wrong number of arguments');\n            if (typeof(min) !== typeof(max))\n                throw new Error('Min and max must be same type');\n            if (min > max)\n                throw new Error('Max must be greater then min');\n\n            this.min = min, this.max = max;\n        }\n\n        _switch(switchValue, stringCallback, numberCallback) {\n            switch (typeof(switchValue)) {\n                case 'string':\n                    return stringCallback(switchValue);\n                case 'number':\n                    return numberCallback(switchValue);\n                default:\n                    throw new Error(`Argument value must be ${typeof(this.min)}`);\n            }\n        }\n\n        _next(value) {\n            return this._switch(value, v => String.fromCharCode(v.charCodeAt(0) + 1), v => v + 1);\n        }\n\n        // get value from range by index like from array\n        get(index) {\n            return index < 0 || index >= this.size() ? undefined : this._switch(this.min, () => String.fromCharCode(this.min.charCodeAt(0) + index), () => this.min + index);\n        }\n\n        // get random value from range\n\n        getRandom() {\n            return this.get(Math.floor(Math.random() * (this.size() - 1)));\n        }\n\n        // check if this range equal to other range\n        isEqual(other) {\n            return this.min === other.min && this.max === other.max;\n        }\n\n        // check if range includes a value\n        includes(value) {\n            return this._switch(value, v => v.charCodeAt(0) >= this.min.charCodeAt(0) && v.charCodeAt(0) <= this.max.charCodeAt(0), v => v >= this.min && v <= this.max);\n        }\n\n        // make string\n        toString() {\n            return `[${this.min}..${this.max}]`;\n        }\n\n        // make array from range\n        toArray() {\n            let array = []\n            for (let tmp = this.min; tmp <= this.max; tmp = this._next(tmp))\n                array.push(tmp);\n            return array;\n        }\n\n        // iterate range like array\n        forEach(callback) {\n            for (let tmp = this.min, index = 0; tmp <= this.max; tmp = this._next(tmp), index++)\n                callback(tmp, index, this);\n            return this;\n        }\n\n        // range size\n        size() {\n            return this._switch(this.min, () => this.max.charCodeAt(0) - this.min.charCodeAt(0) + 1, () => this.max - this.min + 1);\n        }\n\n        getClass() {\n            return 'Range';\n        }\n    };\n\n    return Range;\n});"]}